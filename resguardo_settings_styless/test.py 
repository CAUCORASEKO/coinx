from binance.client import Client
from binance.exceptions import BinanceAPIException
import logging

# Configura las claves API aquí
api_key = 'lSxB8SkFAKprXPA2zPkKg4PGVm6Ys9KKdK6Xbx9x5v3Nkq1t8s9bFrFXdh87yYxC'
api_secret = 'Ddyd7kwyLzOmHxuirdgaWDsR6oymL6iQ3zdGivHGHxhwrq5C90SUaf0Sqgg3yTow'

# Configuración de logging para obtener más detalles en caso de error
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_binance_futures_connection(api_key, api_secret):
    try:
        # Crear un cliente de Binance
        client = Client(api_key, api_secret)

        # Probar la conexión haciendo ping a la API
        logger.info("Haciendo ping a la API...")
        client.ping()
        logger.info("Ping exitoso.")

        # Obtener información de la cuenta de futuros
        logger.info("Obteniendo información de la cuenta de futuros...")
        futures_account_info = client.futures_account()
        logger.info(f"Información de la cuenta de futuros: {futures_account_info}")

        # También puedes intentar obtener el balance
        logger.info("Obteniendo balance de futuros...")
        futures_balance = client.futures_account_balance()
        logger.info(f"Balance de futuros: {futures_balance}")

        return True

    except BinanceAPIException as e:
        logger.error(f"Error de la API de Binance: {e.message}")
        return False
    except Exception as e:
        logger.error(f"Error general al conectarse a Binance: {e}")
        return False


if __name__ == "__main__":
    if test_binance_futures_connection(api_key, api_secret):
        logger.info("Conexión exitosa con la API de Binance Futuros.")
    else:
        logger.error("No se pudo conectar con la API de Binance Futuros.")
